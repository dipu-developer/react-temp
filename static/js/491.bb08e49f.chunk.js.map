{"version":3,"file":"static/js/491.bb08e49f.chunk.js","mappings":"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","sources":["components/pages/Login.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  signIn as amplifySignIn,\r\n  signOut,\r\n  fetchUserAttributes\r\n} from 'aws-amplify/auth';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  \r\n  \r\n  const handleLogin = async (values, setErrors, setSubmitting) => {\r\n    try {\r\n      // AWS Cognito Sign-In\r\n      console.log(\"Hello\");\r\n      await signOut({global: true});\r\n      //await removeItem('accessToken');\r\n      const email_id = values.email;\r\n      const password = values.password;\r\n      const {isSignedIn, nextStep} = await amplifySignIn({\r\n        username: email_id,\r\n        password,\r\n      });\r\n      if (isSignedIn)\r\n      {\r\n        await fetchAndSetUserSession();\r\n        alert('Success', 'You have successfully signed in!');\r\n        navigate('/device');\r\n      } \r\n      else\r\n      {\r\n        alert('Error', 'Sign in failed. Please check your credentials.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      setErrors({ submit: error.message });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const fetchAndSetUserSession = async () => {\r\n    try {\r\n      const attributes = await fetchUserAttributes();\r\n      const formattedAttributes = {\r\n        name: attributes.name || '',\r\n        custom_uname: attributes['custom:uname'] || '',\r\n        email: attributes.email || '',\r\n        phone_number: attributes.phone_number || '',\r\n        custom_cname: attributes['custom:cname'] || '',\r\n        custom_location: attributes['custom:location'] || '',\r\n        custom_city: attributes['custom:city'] || '',\r\n        custom_pincode: attributes['custom:pincode'] || '',\r\n        custom_country: attributes['custom:country'] || '',\r\n        custom_state: attributes['custom:state'] || '',\r\n      };\r\n\r\n      sessionStorage.setItem('userSession', JSON.stringify(formattedAttributes));\r\n      console.log('User session create successfully.');\r\n    } catch (error){\r\n      console.log('Error fetching or saving user attributes:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"authentication-bg authentication-bg-pattern\">\r\n      <div className=\"account-pages mt-5 mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8 col-lg-6 col-xl-4\">\r\n\r\n              <div className=\"card bg-pattern\">\r\n                <div className=\"card-body p-4\">\r\n                  <div className=\"text-center w-75 m-auto\">\r\n                    <div className=\"auth-brand\">\r\n                      <a href=\"/login\" className=\"logo logo-dark text-center\">\r\n                        <span className=\"logo-lg\">\r\n                          <img\r\n                            src=\"assets/images/logo.png\"\r\n                            alt=\"\"\r\n                            height=\"25\"\r\n                          />\r\n                        </span>\r\n                      </a>\r\n\r\n                      <a href=\"/login\" className=\"logo logo-light text-center\">\r\n                        <span className=\"logo-lg\">\r\n                          <img\r\n                            src=\"assets/images/logo-light.png\"\r\n                            alt=\"\"\r\n                            height=\"22\"\r\n                          />\r\n                        </span>\r\n                      </a>\r\n                    </div>\r\n                    <p className=\"text-muted mb-4 mt-3\">\r\n                      Enter your email address and password .\r\n                    </p>\r\n                  </div>\r\n                  <Formik\r\n                    initialValues={{\r\n                      email: '',\r\n                      password: '',\r\n                      submit: null\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                      email: Yup.string().email('Must be a valid email').max(255).required('Please enter email'),\r\n                      password: Yup.string().max(255).required('Please enter password')\r\n                    })}\r\n                    onSubmit={(values, { setErrors, setSubmitting }) => {\r\n                      handleLogin(values, setErrors, setSubmitting);\r\n                    }}\r\n                  >\r\n                    {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                      <form noValidate onSubmit={handleSubmit}>\r\n                        {/* <form action=\"#\"> */}\r\n                          <div className=\"mb-3\">\r\n                            <label for=\"emailaddress\" className=\"form-label\">\r\n                              Email address\r\n                            </label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              type=\"email\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              id=\"emailaddress\"\r\n                              name=\"email\"\r\n                              value={values.email}\r\n                              placeholder=\"Enter your email\"\r\n                            />\r\n                            {touched.email && errors.email && <small className=\"text-danger form-text\">{errors.email}</small>}\r\n                          </div>\r\n\r\n                          <div className=\"mb-3\">\r\n                            <label for=\"password\" className=\"form-label\">\r\n                              Password\r\n                            </label>\r\n                            <div className=\"input-group input-group-merge\">\r\n                              <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Enter your password\"\r\n                                value={values.password}\r\n                              />\r\n                              \r\n                            </div>\r\n                            {touched.password && errors.password && <small className=\"text-danger form-text\">{errors.password}</small>}\r\n                          </div>\r\n                          \r\n                          {errors.submit && (\r\n                            <div className=\"text-center py-2\">\r\n                              <small className=\"text-danger form-text\">{errors.submit}</small>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"text-center d-grid\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\"  disabled={isSubmitting} >\r\n                              Log In\r\n                            </button>\r\n                          </div>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row mt-3\">\r\n                <div className=\"col-12 text-center\">\r\n                  <p>\r\n                    <a href=\"/login\" className=\"text-black-50 ms-1\">\r\n                      Forgot your password?\r\n                    </a>\r\n                  </p>\r\n                  <p className=\"text-black-50\">\r\n                    Don't have an account?{\" \"}\r\n                    <a href=\"/login\" className=\"text-black ms-1\">\r\n                      <b>Sign Up</b>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n"],"names":["Login","navigate","useNavigate","fetchAndSetUserSession","async","attributes","fetchUserAttributes","formattedAttributes","name","custom_uname","email","phone_number","custom_cname","custom_location","custom_city","custom_pincode","custom_country","custom_state","sessionStorage","setItem","JSON","stringify","console","log","error","_jsx","className","children","_jsxs","href","src","alt","height","Formik","initialValues","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","_ref","setErrors","setSubmitting","signOut","global","email_id","isSignedIn","nextStep","amplifySignIn","username","alert","message","handleLogin","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","for","type","onBlur","onChange","id","value","placeholder","disabled"],"sourceRoot":""}